HTML CODE

<div class="background_linear">
                <div class="box"></div>
                <div class="box"></div>
                <div class="box"></div>
                <div class="box"></div>
            </div>
            <div class="background_linear bl2">
                <div class="box"></div>
                <div class="box"></div>
            </div>


<div class="hero_images">
                <img src="assets/images/Frame 165.dee593b2a4ac105a151d449b6bd6866f.svg" alt="">
                <img src="assets/images/chart-2.74b4ae56c008045caddb42315a1dd339.svg" alt="">
            </div>











            
<div class="progressParent" id="back-top">
        <svg class="backCircle svg-inner" width="100%" height="100%" viewBox="-1 -1 102 102">
            <path d="M50,1 a49,49 0 0,1 0,98 a49,49 0 0,1 0,-98"
                style="transition: stroke-dashoffset 10ms linear 0s; stroke-dasharray: 307.919, 307.919; stroke-dashoffset: 153.636;">
            </path>
        </svg>
    </div>






CSS CODE




.background_linear {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    position: absolute;
    filter: blur(150px); 
    top: 300px;
    left: 1000px;
}

.bl2 {
    filter: blur(200px);
    top: -150px;
    left: 50px;
}

.background_linear .box {
    background-color: royalblue;
    width: 200px;
    height: 200px;
    border-radius: 50%;
}

.background_linear .box:nth-child(1) {
    background-color: crimson;
}

.background_linear .box:nth-child(2) {
    background-color: orange;
}

.background_linear .box:nth-child(3) {
    background-color: teal;
}

.hero_images {
    display: flex;
    flex-direction: column;
    gap: 50px;
}

.hero_images img:nth-child(1) {
    margin-right: 15%;
}

.hero_images img:nth-child(2) {
    margin-left: 20%;
}

@keyframes rotate {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

.hero_images img {
    animation: rotate 5s linear infinite;
}




















.skills .skills_container .card .bar .level {
    border-radius: 50px;
}

.skills .skills_container .card:nth-child(1) .bar .level {
    width: 90%;
    height: 100%;
    background-color: royalblue;
}

.skills .skills_container .card:nth-child(2) .bar .level {
    width: 90%;
    height: 100%;
    background-color: teal;
}

.skills .skills_container .card:nth-child(3) .bar .level {
    width: 60%;
    height: 100%;
    background-color: orange;
}



















.progressParent {
    position: fixed;
    right: 30px;
    bottom: 70px;
    height: 36px;
    width: 36px;
    cursor: pointer;
    display: block;
    border-radius: 50px;
    box-shadow: inset 0 0 0 2px #d0d0d4;
    z-index: 10000;
    opacity: 1; /* Updated */
    visibility: visible; /* Updated */
    transform: translateY(0); /* Updated */
    transition: all 200ms linear; /* Updated */
}

.progressParent::after {
    position: absolute;
    content: "\ea76";
    font-family: "remixicon" !important;
    text-align: center;
    line-height: 36px;
    font-size: 20px;
    color: green;
    left: 0;
    top: 0;
    height: 36px;
    width: 36px;
    cursor: pointer;
    display: block;
    z-index: 2;
    transition: all 200ms linear; /* Updated */
    font-weight: 900;
}

.progressParent.rn-backto-top-active {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
}

svg {
    vertical-align: baseline;
}

img, svg {
    vertical-align: middle;
}

















js






(function () {
  var progressParent = document.getElementById("back-top"); // Updated selector
  var progressPath = progressParent.querySelector("path");
  var pathLength = progressPath ? progressPath.getTotalLength() : null;

  if (!progressPath || !pathLength) return;

  progressPath.style.transition = "none";
  progressPath.style.strokeDasharray = pathLength + " " + pathLength;
  progressPath.style.strokeDashoffset = pathLength;
  progressPath.getBoundingClientRect();
  progressPath.style.transition = "stroke-dashoffset 10ms linear";

  var updateProgress = function () {
      var scroll = window.scrollY || document.documentElement.scrollTop;
      var height = document.documentElement.scrollHeight - window.innerHeight;
      var progress = pathLength - (scroll * pathLength) / height;
      progressPath.style.strokeDashoffset = progress;
  };
  updateProgress();
  window.addEventListener("scroll", updateProgress);

  var offset = 50;
  var duration = 550;

  window.addEventListener("scroll", function () {
      if (window.scrollY > offset) {
          progressParent.classList.add("rn-backto-top-active");
      } else {
          progressParent.classList.remove("rn-backto-top-active");
      }
  });

  progressParent.addEventListener("click", function (event) {
      event.preventDefault();
      window.scrollTo({
          top: 0,
          behavior: 'smooth'
      });
  });
})();